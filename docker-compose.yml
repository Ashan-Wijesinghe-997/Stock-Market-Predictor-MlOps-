version: '3.8'

services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=Stock_Predictor
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Tha12345
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./Stock-predictions-backend
      dockerfile: Dockerfile
    image: stock-predictions-backend:latest
    volumes:
      - ./Stock-predictions-backend:/app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - DATABASE_HOST=db
      - DATABASE_NAME=Stock_Predictor
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=Tha12345
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s
  
  frontend:
    build:
      context: ./Stock-predictions-frontend
      dockerfile: Dockerfile
    image: stock-predictions-frontend:latest
    volumes:
      - ./Stock-predictions-frontend:/app
      - /app/node_modules
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: